// <auto-generated />
using System;
using ClenaArch.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClenaArch.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250130170622_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("ClenaArch.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gander")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("members", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "janis@email.com",
                            FirstName = "Jane",
                            Gander = "feminino",
                            IsActive = true,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jhon@email.com",
                            FirstName = "Jhon",
                            Gander = "masculino",
                            IsActive = true,
                            LastName = "Doe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
